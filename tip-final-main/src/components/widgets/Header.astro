---
import { Icon } from 'astro-icon/components';
import ToggleTheme from '~/components/common/ToggleTheme.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';
import Button from '~/components/ui/Button.astro';
import { twMerge } from "tailwind-merge";


import { trimSlash, getAsset } from '~/utils/permalinks';
import type { CallToAction } from '~/types';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
  description?: string;
}

interface ActionLink extends CallToAction {}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  id = 'headerData',
  links = [],
  actions = [],
  isSticky = false,
  isDark = false,
  isFullWidth = false,
  showToggleTheme = false,
  showRssFeed = false,
  position = 'right',
  defaultIconClass = "text-primary dark:text-slate-200 border-primary dark:border-blue-700",
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky, 'dark:slate-800': isDark, 'bg-gray-200': !isDark },
    'top-10 h-14 z-40 flex-none mx-auto w-full ease-in-out bg-clip-padding',
  ]}
  {...isSticky ? { 'data-aw-sticky-header': true } : {}}
  {...id ? { id } : {}}
>
<div class="holographic-section absolute inset-0 z-0"></div>
  <div class="absolute inset-0"></div>
  <div
    class:list={[
      'relative text-default px-3 md:px-6 mx-auto w-full md:flex md:justify-between',
      {
        'max-w-7xl': !isFullWidth,
      },
    ]}
  >
    <div class:list={[{ 'mr-auto rtl:mr-0 rtl:ml-auto': position === 'right' }, 'flex justify-between']}>
      <div class="flex items-center md:hidden">
        <ToggleMenu />
      </div>
    </div>
    <nav
      class="items-center w-full md:w-auto hidden md:flex text-default overflow-y-auto overflow-x-hidden md:overflow-y-visible md:overflow-x-auto md:mx-5"
      aria-label="Main navigation"
    >
    <ul class="flex flex-col md:flex-row md:self-start w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-medium">
      {
        links.map(({ text, href, links, icon }) => (
          <li class={links?.length ? 'dropdown' : ''}>
            {links?.length ? (
              <>
                <button class="hover:text-link dark:hover:text-white px-4 py-3 flex items-center">
                  {icon && <Icon name={icon} class="w-6 h-6 mr-2" />}
                  {text}{' '}
                  <Icon name="tabler:chevron-down" class="w-3.5 h-3.5 ml-0.1 rtl:ml-0 rtl:mr-0.1 hidden md:inline" />
                </button>
                <ul class="dropdown-menu md:backdrop-blur-md dark:md:bg-dark md:absolute left-0 pl-4 md:pl-0 md:hidden font-medium md:bg-white w-full md:min-w-[200px] drop-shadow-xl">
  {links.map(({ text: text2, href: href2, icon, description }) => (
    <li>
      <a
        class:list={[
          'first:rounded-t last:rounded-b md:hover:bg-gray-100 hover:text-link dark:hover:text-white dark:hover:bg-gray-700 py-2 px-5 block whitespace-no-wrap w-full', // Modified class
          { 'aw-link-active': href2 === currentPath },
        ]}
        href={href2}
      >
        <div class="flex items-start"> <!-- Changed items-center to items-start -->
          {icon && (
  <div class="w-10 h-10 border-primary aspect-square rounded-full overflow-hidden flex items-center justify-center">
    <Icon name={icon} class={twMerge("w-6 h-6", defaultIconClass)} />
  </div>
)}
<div class="ml-3">
  <div class="text-sm font-medium text-yellow-700 text-nowrap">{text2}</div>
  <div class="text-xs text-gray-500">{description}</div>
</div>
        </div>
      </a>
    </li>
  ))}
</ul>

              </>
            ) : (
              <a
                class:list={[
                  'hover:text-link dark:hover:text-white px-4 py-3 flex items-centers',
                  { 'aw-link-active': href === currentPath },
                ]}
                href={href}
              >
                {icon && <Icon name={icon} class="w-5 h-5 mr-2" />}
                {text}
              </a>
            )}
          </li>
        ))
      }
    </ul>
    
    </nav>
    <div
      class:list={[
        { 'ml-auto rtl:ml-0 rtl:mr-auto': position === 'left' },
        'hidden md:self-center md:flex items-center md:mb-0 fixed w-full md:w-auto md:static justify-end left-0 rtl:left-auto rtl:right-0 bottom-0 p-3 md:p-0',
      ]}
    >
      <div class="items-center flex justify-between w-full md:w-auto">
        <div class="flex">
          {showToggleTheme && <ToggleTheme iconClass="w-6 h-6 md:w-5 md:h-5 md:inline-block" />}
          {
            showRssFeed && (
              <a
                class="text-muted dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center"
                aria-label="RSS Feed"
                href={getAsset('/rss.xml')}
              >
                <Icon name="tabler:rss" class="w-5 h-5" />
              </a>
            )
          }
        </div>
        {
          actions?.length ? (
            <span class="ml-4 rtl:ml-0 rtl:mr-4">
              {actions.map((btnProps) => (
                <Button {...btnProps} class="btn btn-primary ml-2 py-2.5 px-5.5 md:px-6 font-semibold shadow-none text-sm w-auto" />
              ))}
            </span>
          ) : (
            ''
          )
        }
      </div>
    </div>
  </div>
</header>


<style>
.holographic-section {
  font-size: 1.5rem;
  font-weight: 700;
  background: linear-gradient(45deg, #d3d3d3, #ffffff, #d3d3d3, #e0e0e0, #d3d3d3, #ffffff, #e0e0e0);
  background-size: 300% 300%; /* Increase the size for a stronger effect */
  animation: MoveGradient 10s ease infinite; /* Adjust animation duration */
}

@keyframes MoveGradient {
  0% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

  </style>
  